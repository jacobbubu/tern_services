// Generated by CoffeeScript 1.3.3
var GetSender, MediaFile, coreClass, memoAgent, _MemoAgent,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  _this = this;

GetSender = require('./sender_pool').getSender;

MediaFile = require('../models/media_file_mod');

coreClass = (function() {
  var _instance;

  function coreClass() {}

  _instance = void 0;

  coreClass.get = function() {
    return _instance != null ? _instance : _instance = new _MemoAgent;
  };

  return coreClass;

})();

_MemoAgent = (function() {

  function _MemoAgent() {
    this.mediaWriteback = __bind(this.mediaWriteback, this);

  }

  _MemoAgent.prototype.mediaWriteback = function(dataZone, memo, next) {
    var message, mid, sender,
      _this = this;
    try {
      mid = memo.mid;
      sender = GetSender(dataZone);
      message = {
        method: "mediaUriWriteback",
        data: memo
      };
      return sender.send(message, function(err, response) {
        var error, result, status;
        if (err != null) {
          return next(err);
        }
        error = null;
        status = response.response.status;
        switch (status) {
          case 200:
            result = response.response.result;
            break;
          case 404:
            MediaFile.unlink(memo.mid, function(err) {
              if (err != null) {
                return error = new Error(("Error delete media ('" + mid + "'): ") + err.toString());
              }
            });
            break;
          default:
            error = new Error("Unknown writeback status = " + status + " media_id: ('" + mid + "')");
        }
        return next(error);
      });
    } catch (e) {
      return next(e);
    }
  };

  return _MemoAgent;

})();

/*
# Modulereturn Exports
*/


memoAgent = coreClass.get();

module.exports.mediaWriteback = function(dataZone, memo, next) {
  return memoAgent.mediaWriteback(dataZone, memo, function(err) {
    if (next != null) {
      return next(err);
    }
  });
};
