// Generated by CoffeeScript 1.3.3
var Err, Log, Token, userAuth;

Log = require('tern.logger');

Token = require('../agents/token_agent');

Err = require('./media_error');

userAuth = function(req, res, next) {
  var accessToken, authMethod, authorization, _ref;
  authorization = req.headers.authorization;
  if (authorization == null) {
    return Err.sendError(res, Err.CODES.AUTHORIZATION_REQUIRED);
  }
  _ref = authorization.match(/[a-z0-9\-_]+/gi), authMethod = _ref[0], accessToken = _ref[1];
  if (authMethod !== 'Bearer') {
    return Err.sendError(res, Err.CODES.UNSUPPORTED_AUTHORIZATION_METHOD, authMethod);
  }
  if (accessToken == null) {
    return Err.sendError(res, Err.CODES.CREDENTIAL_REQUIRED, authMethod);
  }
  return Token.getInfo(accessToken, function(err, user) {
    var media_id;
    if (err != null) {
      if ((err.name != null) && err.name === 'ResourceDoesNotExistException') {
        return Err.sendError(res, Err.CODES.INVALID_ACCESS_TOKEN);
      } else {
        res.send(500);
        return Log.error('user_auth:\r\n' + err.toString() + '\r\n' + err.stack);
      }
    } else {
      if (req._tern == null) {
        req._tern = {};
      }
      req._tern.user_id = user.user_id;
      req._tern.user_data_zone = user.data_zone;
      req._tern.scope = user.scope;
      media_id = req.params.media_id;
      if (media_id == null) {
        return Err.sendError(res, Err.CODES.MEDIA_ID_REQUIRED);
      }
      if (media_id.split(':')[0] !== req._tern.user_id) {
        return Err.sendError(res, Err.CODES.UNMATCHED_MEDIA_ID, media_id);
      }
      req._tern.media_id = media_id;
      return next();
    }
  });
};

module.exports = userAuth;
