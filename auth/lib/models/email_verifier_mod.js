// Generated by CoffeeScript 1.3.3
var DB, DBKeys, coreClass, emailVerifierModel, uuid, _EmailVerifierModel,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  _this = this;

uuid = require("node-uuid");

DB = require('tern.database');

DBKeys = require('tern.redis_keys');

coreClass = (function() {
  var _instance;

  function coreClass() {}

  _instance = void 0;

  coreClass.get = function() {
    return _instance != null ? _instance : _instance = new _EmailVerifierModel;
  };

  return coreClass;

})();

/*
# Class Definition
*/


_EmailVerifierModel = (function() {

  function _EmailVerifierModel() {
    this.generateToken = __bind(this.generateToken, this);
    this.db = DB.getDB('emailTokenDB');
  }

  _EmailVerifierModel.prototype.generateToken = function(user_object, next) {
    var args, emailToTokenKey, newToken, newTokenValue, script, tokenToUserObjKey,
      _this = this;
    newToken = uuid();
    newTokenValue = JSON.stringify(user_object);
    emailToTokenKey = DBKeys.EmailToTokenKey(user_object.email);
    tokenToUserObjKey = DBKeys.EmailTokenToUserObjKey(newToken);
    script = "local emailToTokenKey = KEYS[1]\nlocal tokenToUserObjKey = KEYS[2]\nlocal tokenToUserObjKeyBase = ARGV[1]..'/'\nlocal newToken = ARGV[2]\nlocal newTokenValue = ARGV[3]\n\nlocal tokenKey = redis.call('GET', emailToTokenKey)\nif tokenKey then\n  redis.call('DEL', tokenToUserObjKeyBase..tokenKey)        \nend\n\nredis.call('SETEX', tokenToUserObjKey, 86400, newTokenValue)\nredis.call('SETEX', emailToTokenKey, 86400, newToken)\nreturn 0";
    args = [2, emailToTokenKey, tokenToUserObjKey, DBKeys.EmailTokenToUserObjKeyBase(), newToken, newTokenValue];
    return this.db.run_script(script, args, function(err, res) {
      if (err != null) {
        return next(err);
      }
      return next(null, newToken);
    });
  };

  _EmailVerifierModel.prototype.verifyToken = function(token, next) {};

  return _EmailVerifierModel;

})();

/*
# Module Exports
*/


emailVerifierModel = coreClass.get();

module.exports.generateToken = function(user_id, next) {
  return emailVerifierModel.generateToken(user_id, function(err, res) {
    if (next != null) {
      return next(err, res);
    }
  });
};
