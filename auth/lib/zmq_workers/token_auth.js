// Generated by CoffeeScript 1.3.3
var Log, PJ, Responder, TokenAuth, Tokens, ZMQStatusCodes, responder;

Log = require('tern.logger');

Tokens = require('../models/token_mod');

Responder = require('tern.zmq_reqres').Responder;

ZMQStatusCodes = require('tern.zmq_helper').zmq_status_codes;

PJ = require('tern.prettyjson');

TokenAuth = (function() {

  function TokenAuth() {}

  TokenAuth.prototype.run = function(data, next) {
    var accessToken;
    try {
      if (typeof data !== 'object') {
        return next("data must be an object.");
      }
      if (data.access_token == null) {
        return next("data must be an object.");
      }
      accessToken = data.access_token;
      return Tokens.tokenAuth(accessToken, function(err, res) {
        if (err != null) {
          return next(err);
        }
        return next(null, res);
      });
    } catch (err) {
      next(err);
      return Log.error('Request Error:\r\n' + PJ.render(data + '\r\n' + err.toString() + '\r\n' + err.stack));
    }
  };

  return TokenAuth;

})();

responder = null;

module.exports.register = function(options) {
  if (responder == null) {
    responder = new Responder(options);
    responder.registerWorker('TokenAuth', TokenAuth);
    return Log.notice("ZMQ Worker 'TokenAuth' registered on " + options.dealer);
  }
};
