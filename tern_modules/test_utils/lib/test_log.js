// Generated by CoffeeScript 1.3.3
var Util, colors, formatClientMessage, formatServerMessage,
  __slice = [].slice;

colors = require('colors');

Util = require('util');

colors.setTheme({
  silly: 'rainbow',
  input: 'grey',
  verbose: 'cyan',
  prompt: 'grey',
  info: 'green',
  data: 'grey',
  help: 'cyan',
  warn: 'yellow',
  debug: 'blue',
  error: 'red'
});

formatClientMessage = function(message) {
  message = message.trim();
  message = "\r\nClient: " + message;
  return message = message.replace(/\r\n/g, "\r\n\t\t");
};

exports.clientLog = function() {
  var message, messages;
  messages = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
  message = messages.join(" ");
  return console.log(formatClientMessage(message).help);
};

exports.clientDir = function(value, depth) {
  var message;
  if (depth == null) {
    depth = 3;
  }
  message = Util.inspect(value, false, depth);
  return console.log(formatClientMessage(message).help);
};

exports.clientError = function() {
  var message, messages;
  messages = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
  message = messages.join(" ");
  return console.log(formatClientMessage(message).error);
};

formatServerMessage = function(message) {
  message = message.trim();
  message = "\r\nServer: " + message;
  return message = message.replace(/\r\n/g, "\r\n\t\t");
};

exports.serverLog = function() {
  var message, messages;
  messages = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
  message = messages.join(" ");
  return console.log(formatServerMessage(message).input);
};

exports.serverDir = function(value, depth) {
  var message;
  if (depth == null) {
    depth = 3;
  }
  message = Util.inspect(value, false, depth);
  return console.log(formatServerMessage(message).input);
};

exports.serverError = function() {
  var message, messages;
  messages = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
  message = messages.join(" ");
  return console.log(formatServerMessage(message).warn);
};
