// Generated by CoffeeScript 1.3.3
var Cache, LRU, Perf, PerfPrefix;

LRU = require("expiring-lru-cache");

Perf = require("tern.perf_counter");

PerfPrefix = "";

Cache = (function() {

  function Cache(name, options) {
    this.name = name;
    this.options = options;
    if (!(name != null)) {
      throw new ArgumentNullException("'name' required.");
    }
    this.innerLRU = new LRU(options);
    this.total_request = 0;
    this.hit_request = 0;
    this.perfKey = [PerfPrefix, name].join(".");
  }

  Cache.prototype.set = function() {
    return this.innerLRU.set.apply(this.innerLRU, arguments);
  };

  Cache.prototype.get = function() {
    var hitRatio, result;
    this.total_request++;
    result = this.innerLRU.get.apply(this.innerLRU, arguments);
    if (result != null) {
      this.hit_request++;
    }
    if (this.total_request % 10 === 0) {
      hitRatio = this.hit_request / this.total_request * 100;
      Perf.gauges(this.perfKey, hitRatio);
    }
    return result;
  };

  Cache.prototype.del = function() {
    return this.innerLRU.del.apply(this.innerLRU, arguments);
  };

  return Cache;

})();

module.exports = Cache;
