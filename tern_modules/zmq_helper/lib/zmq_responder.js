// Generated by CoffeeScript 1.3.3
var Log, PJ, Utils, ZMQKey, send;

Log = require('tern.logger');

Utils = require('tern.utils');

PJ = require('tern.prettyjson');

ZMQKey = require('./zmq_key');

/*
  signature1:
    socket, status, req
  signature2:
    socket, req, res
*/


send = function(socket, arg1, arg2) {
  var req, res, resBuffer, responseObj, status, strResponse, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
  if (Utils.type(arg1) === 'number') {
    status = arg1;
    req = arg2;
    responseObj = {
      req_ts: (_ref = req != null ? req.req_ts : void 0) != null ? _ref : '',
      response: {
        method: (_ref1 = req != null ? (_ref2 = req.request) != null ? _ref2.method : void 0 : void 0) != null ? _ref1 : '',
        status: status
      }
    };
  } else {
    req = arg1;
    res = arg2;
    responseObj = res;
    responseObj.req_ts = (_ref3 = req != null ? req.req_ts : void 0) != null ? _ref3 : '';
    responseObj.response.method = (_ref4 = req != null ? (_ref5 = req.request) != null ? _ref5.method : void 0 : void 0) != null ? _ref4 : '';
  }
  strResponse = JSON.stringify(responseObj);
  resBuffer = Utils.lzfAndEncrypt(strResponse, ZMQKey.key_iv);
  socket.send(resBuffer);
  return Log.info("ZMQ Responder:\r\n-\r\n" + (PJ.render(req)) + "\r\n" + (PJ.render(responseObj)) + "\r\nLength: " + (new Buffer(strResponse).length) + "/" + resBuffer.length);
};

module.exports.send = send;
